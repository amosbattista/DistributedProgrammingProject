## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/deliveryAppServer?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username = root
#
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = create-drop

spring.jpa.hibernate.ddl-auto=update
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.dialect.storage_engine=innodb
spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

#[12:33] ALESSANDRO FERRENTINO
server.error.include-stacktrace=never

#spring.jackson.serialization.fail-on-empty-beans=false

#Problemi:

#- Servizio per balance ?
#- Servizio per isAvailable? ?
#- Gestire Update Balance ?
#- Gestire password nell'update ?
#- Inserire total_price nell'ordine ?
#- Evitare che il customer possa fare più ordini alla volta ?
#- Creare api per ottenere l'ordine corrente per il customer ?
#- Risolvere bug loop infinito causate dalla bidirizione della ManyToOne/OneToMany ?
# Modificare PutProvider per evitare annullamento di menu/balance ?


#- DTO: order/provider
#- API menu
#- Lista di ingredienti
#- Offset
#- Eliminare ordini rifiutati per saldo insufficiente
# Eccezione se il provider richiesto non è disponibile (anche se è controllato dal client)
